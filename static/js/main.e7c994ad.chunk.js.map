{"version":3,"sources":["logo.svg","components/card/card.container.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","id","name","CardList","robots","map","value","index","SearchBox","placeholder","handleChange","style","type","onChange","App","e","target","setState","state","searchField","fetch","then","res","json","filterRobots","this","filter","toLowerCase","includes","toLocaleLowerCase","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAAe,I,wBCYAA,EATF,SAACC,GACV,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,GAAhC,6BACR,6BAAKH,EAAMI,SAFsBJ,EAAMG,KCUpCE,EAVE,SAACL,GACd,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMM,OAAOC,KAAI,SAACC,EAAOC,GACtB,OAAO,cAAC,EAAD,CAAML,KAAMI,EAAMJ,KAAMD,GAAIK,EAAML,WCO1CO,G,MAZG,SAAC,GAA8C,IAA7CN,EAA4C,EAA5CA,KAAMO,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,MACjD,OACI,qBAAKZ,UAAU,qBAAf,SACI,uBAAOa,KAAK,OACLV,KAAMA,EACNH,UAAWY,EACXE,SAAUH,EACVD,YAAaA,QCgCjBK,E,kDAnCb,aAAc,IAAD,8BACX,gBAOFJ,aAAe,SAACK,GACZ,IAAIb,EAAOa,EAAEC,OAAOd,KAChBI,EAAQS,EAAEC,OAAOV,MACrB,EAAKW,SAAL,eAAgBf,EAAMI,KATxB,EAAKY,MAAQ,CACXd,OAAQ,GACRe,YAAa,IAJJ,E,qDAcb,WAAoB,IAAD,OACjBC,MAAM,8CACNC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GAAG,OAAG,EAAKL,SAAS,CAACb,OAAOkB,S,oBAGnC,WAAS,IAAD,OACAE,EAAeC,KAAKP,MAAMd,OAAOsB,QAAO,SAACpB,GAC7C,OAAOA,EAAMJ,KAAKyB,cAAcC,SAAS,EAAKV,MAAMC,YAAYU,wBAElE,OACE,sBAAK9B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWG,KAAK,cAAcO,YAAY,gBAAgBC,aAAce,KAAKf,aAAcC,MAAM,WACjG,cAAC,EAAD,CAAUP,OAAQoB,W,GA7BRM,IAAMC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e7c994ad.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport \"./card.style.css\";\r\n\r\nconst Card = (props) => {\r\n    return(\r\n        <div className=\"card-container\" key={props.id}>\r\n            <img src={`https://robohash.org/${props.id}/?set=set2&size=180x180`} />\r\n            <h1>{props.name}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport \"./card-list.style.css\";\r\n\r\nimport Card from \"../card/card.container\";\r\n\r\nconst CardList = (props) => {\r\n    return(\r\n        <div className=\"card-list\">\r\n            {props.robots.map((value, index)=>{\r\n                return(<Card name={value.name} id={value.id}/>)\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nimport \"./search-box.style.css\";\r\n\r\nconst SearchBox = ({name, placeholder, handleChange, style}) => {\r\n    return(\r\n        <div className=\"search-box-wrapper\">\r\n            <input type=\"text\"\r\n                   name={name}\r\n                   className={style} \r\n                   onChange={handleChange} \r\n                   placeholder={placeholder}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\n\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      robots: [],\n      searchField: \"\"\n    }\n  }\n\n  handleChange = (e) => {\n      let name = e.target.name;\n      let value = e.target.value;\n      this.setState({[name]:value});\n  }\n\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\").\n    then(res=>res.json()).\n    then(res=> this.setState({robots:res}));\n  }\n\n  render(){\n    const filterRobots = this.state.robots.filter((value)=>{\n      return(value.name.toLowerCase().includes(this.state.searchField.toLocaleLowerCase()));\n    });\n    return (\n      <div className=\"App\">\n        <h2>Monsters Rolodex</h2>\n        <SearchBox name=\"searchField\" placeholder=\"Search Robots\" handleChange={this.handleChange} style=\"search\"/>\n        <CardList robots={filterRobots}/>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}